{"version":3,"sources":["actions/listsActions.js","actions/cardsActions.js","actions/index.js","reducers/listsReducer.js","reducers/cardsReducer.js","reducers/boardsReducer.js","reducers/boardOrderReducer.js","reducers/activeBoardReducer.js","reducers/index.js","store/index.js","components/TrelloForm.js","components/TrelloButton.js","components/TrelloCard.js","components/TrelloOpenForm.js","components/TrelloCreate.js","components/TrelloList.js","components/TrelloBoard.js","actions/boardActions.js","components/BoardThumbnail.js","components/Home.js","routes/index.js","components/App.js","serviceWorker.js","index.js"],"names":["addList","title","dispatch","getState","boardID","activeBoard","id","uuid","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","listID","text","ADD_CARD","EDIT_CARD","DELETE_CARD","EDIT_LIST_TITLE","DELETE_LIST","SET_ACTIVE_BOARD","ADD_BOARD","initialState","cards","board","listsReducer","state","action","newList","newState","list","push","card","splice","listStart","listEnd","newCards","filter","cardID","newTitle","cardsReducer","newCard","newText","lists","boardsReducer","newListID","newLists","pulledOutList","newID","newBoard","console","log","boardOrderReducer","activeBoardReducer","combineReducers","boards","boardOrder","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","Container","styled","div","StyledCard","Card","StyledTextArea","Textarea","ButtonContainer","StyledIcon","Icon","TrelloForm","React","memo","onChange","closeForm","children","placeholder","autoFocus","value","e","onBlur","onMouseDown","StyledButton","Button","TrelloButton","onClick","variant","CardContainer","EditButton","DeleteButton","TrelloCard","index","useState","isEditing","setIsEditing","cardText","setText","handleChange","target","saveCard","preventDefault","editCard","handleDeleteCard","deleteCard","String","provided","draggableProps","dragHandleProps","ref","innerRef","onDoubleClick","fontSize","CardContent","Typography","connect","TrelloOpenForm","buttonTextOpacity","buttonTextColor","buttonTextBackground","OpenFormButton","style","flexShrink","TrelloCreate","formOpen","openForm","setState","handleInputChange","handleAddList","props","handleAddCard","renderOpenForm","buttonText","this","PureComponent","ListContainer","StyledInput","input","TitleContainer","ListTitle","h4","listTitle","setListTitle","handleFocus","select","handleFinishEditing","editTitle","handleDeleteList","deleteList","droppableId","onSubmit","onFocus","droppableProps","map","ListsContainer","H2","h2","TrelloBoard","onDragEnd","result","destination","source","match","params","listOrder","to","direction","listCards","Thumbnail","Title","h1","BoardThumbnail","Thumbnails","HomeContainer","CreateTitle","h3","CreateInput","newBoardTitle","setNewBoardTitle","handleSubmit","addBoard","textDecoration","textAlign","AppRouter","path","exact","component","Home","App","Boolean","window","location","hostname","store","createStore","applyMiddleware","thunk","persistor","persistStore","Store","GlobalStyle","createGlobalStyle","ReactDOM","render","loading","document","getElementById","$","bind","nodeName","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d0e48a9d.chunk.js","sourcesContent":["import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const addList = title => {\n  return (dispatch, getState) => {\n    const boardID = getState().activeBoard;\n    const id = uuid();\n    dispatch({\n      type: CONSTANTS.ADD_LIST,\n      payload: { title, boardID, id }\n    });\n  };\n};\n\nexport const sort = (\n  droppableIdStart,\n  droppableIdEnd,\n  droppableIndexStart,\n  droppableIndexEnd,\n  draggableId,\n  type\n) => {\n  return (dispatch, getState) => {\n    const boardID = getState().activeBoard;\n    dispatch({\n      type: CONSTANTS.DRAG_HAPPENED,\n      payload: {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart,\n        draggableId,\n        type,\n        boardID\n      }\n    });\n  };\n};\n\nexport const editTitle = (listID, newTitle) => {\n  return {\n    type: CONSTANTS.EDIT_LIST_TITLE,\n    payload: {\n      listID,\n      newTitle\n    }\n  };\n};\n\nexport const deleteList = listID => {\n  return (dispatch, getState) => {\n    const boardID = getState().activeBoard;\n    return dispatch({\n      type: CONSTANTS.DELETE_LIST,\n      payload: {\n        listID,\n        boardID\n      }\n    });\n  };\n};\n","import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const addCard = (listID, text) => {\n  const id = uuid();\n  return {\n    type: CONSTANTS.ADD_CARD,\n    payload: { text, listID, id }\n  };\n};\n\nexport const editCard = (id, listID, newText) => {\n  return {\n    type: CONSTANTS.EDIT_CARD,\n    payload: { id, listID, newText }\n  };\n};\n\nexport const deleteCard = (id, listID) => {\n  return {\n    type: CONSTANTS.DELETE_CARD,\n    payload: { id, listID }\n  };\n};\n","export * from \"./listsActions\";\nexport * from \"./cardsActions\";\nexport * from \"./boardActions\";\n\nexport const CONSTANTS = {\n  ADD_CARD: \"ADD_CARD\",\n  ADD_LIST: \"ADD_LIST\",\n  DRAG_HAPPENED: \"DRAG_HAPPENED\",\n  EDIT_CARD: \"EDIT_CARD\",\n  DELETE_CARD: \"DELETE_CARD\",\n  EDIT_LIST_TITLE: \"EDIT_LIST_TITLE\",\n  DELETE_LIST: \"DELETE_LIST\",\n  SET_ACTIVE_BOARD: \"SET_ACTIVE_BOARD\",\n  ADD_BOARD: \"ADD_BOARD\"\n};\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"list-0\": {\n    id: \"list-0\",\n    cards: [\"card-0\"],\n    title: \"List 1\",\n    board: \"board-0\",\n  },\n};\n\nconst listsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { title, id } = action.payload;\n      const newList = {\n        title: title,\n        id: `list-${id}`,\n        cards: [],\n      };\n\n      const newState = { ...state, [`list-${id}`]: newList };\n\n      return newState;\n    }\n\n    case CONSTANTS.ADD_CARD: {\n      const { listID, id } = action.payload;\n      const list = state[listID];\n      list.cards.push(`card-${id}`);\n      return { ...state, [listID]: list };\n    }\n\n    case CONSTANTS.DRAG_HAPPENED:\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart,\n\n        type,\n      } = action.payload;\n\n      // draggin lists around - the listOrderReducer should handle this\n      if (type === \"list\") {\n        return state;\n      }\n\n      // in the same list\n      if (droppableIdStart === droppableIdEnd) {\n        const list = state[droppableIdStart];\n        const card = list.cards.splice(droppableIndexStart, 1);\n        list.cards.splice(droppableIndexEnd, 0, ...card);\n        return { ...state, [droppableIdStart]: list };\n      }\n\n      // other list\n      if (droppableIdStart !== droppableIdEnd) {\n        // find the list where the drag happened\n        const listStart = state[droppableIdStart];\n        // pull out the card from this list\n        const card = listStart.cards.splice(droppableIndexStart, 1);\n        // find the list where the drag ended\n        const listEnd = state[droppableIdEnd];\n\n        // put the card in the new list\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\n        return {\n          ...state,\n          [droppableIdStart]: listStart,\n          [droppableIdEnd]: listEnd,\n        };\n      }\n      return state;\n\n    case CONSTANTS.DELETE_CARD: {\n      const { listID, id } = action.payload;\n\n      const list = state[listID];\n      const newCards = list.cards.filter((cardID) => cardID !== id);\n\n      return { ...state, [listID]: { ...list, cards: newCards } };\n    }\n\n    case CONSTANTS.EDIT_LIST_TITLE: {\n      const { listID, newTitle } = action.payload;\n\n      const list = state[listID];\n      list.title = newTitle;\n      return { ...state, [listID]: list };\n    }\n\n    case CONSTANTS.DELETE_LIST: {\n      const { listID } = action.payload;\n      const newState = state;\n      delete newState[listID];\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default listsReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"card-0\": {\n    text: \"Card 1\",\n    id: `card-0`,\n    list: \"list-0\",\n  },\n};\n\nconst cardsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_CARD: {\n      const { text, listID, id } = action.payload;\n\n      const newCard = {\n        text,\n        id: `card-${id}`,\n        list: listID,\n      };\n\n      return { ...state, [`card-${id}`]: newCard };\n    }\n    case CONSTANTS.EDIT_CARD: {\n      const { id, newText } = action.payload;\n      const card = state[id];\n      card.text = newText;\n      return { ...state, [`card-${id}`]: card };\n    }\n\n    case CONSTANTS.DELETE_CARD: {\n      const { id } = action.payload;\n      const newState = state;\n      delete newState[id];\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardsReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"board-0\": {\n    id: \"board-0\",\n    lists: [\"list-0\"],\n    title: \"Board 1\",\n  },\n};\n\nconst boardsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { boardID, id } = action.payload;\n      const board = state[boardID];\n      const newListID = `list-${id}`;\n      const newLists = [...board.lists, newListID];\n      board.lists = newLists;\n      return { ...state, [boardID]: board };\n    }\n\n    case CONSTANTS.DRAG_HAPPENED: {\n      const { boardID } = action.payload;\n      const board = state[boardID];\n      const lists = board.lists;\n      const {\n        droppableIndexEnd,\n        droppableIndexStart,\n\n        type,\n      } = action.payload;\n\n      // draggin lists around\n      if (type === \"list\") {\n        const pulledOutList = lists.splice(droppableIndexStart, 1);\n        lists.splice(droppableIndexEnd, 0, ...pulledOutList);\n        board.lists = lists;\n\n        return { ...state, [boardID]: board };\n      }\n      return state;\n    }\n    case CONSTANTS.DELETE_LIST: {\n      const { listID, boardID } = action.payload;\n      const board = state[boardID];\n      const lists = board.lists;\n      const newLists = lists.filter((id) => id !== listID);\n      board.lists = newLists;\n      return { ...state, [boardID]: board };\n    }\n\n    case CONSTANTS.ADD_BOARD: {\n      const { title, id } = action.payload;\n      const newID = `board-${id}`;\n      const newBoard = {\n        id: newID,\n        title,\n        lists: [],\n      };\n\n      return { ...state, [newID]: newBoard };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default boardsReducer;\n","import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nconsole.log(uuid());\n\nconst initialState = [\"board-0\"];\n\nconst boardOrderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_BOARD: {\n      return [...state, `board-${action.payload.id}`];\n    }\n    default:\n      return state;\n  }\n};\n\nexport default boardOrderReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = null;\n\nconst activeBoardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.SET_ACTIVE_BOARD: {\n      return action.payload;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default activeBoardReducer;\n","import { combineReducers } from \"redux\";\nimport listsReducer from \"./listsReducer\";\nimport cardsReducer from \"./cardsReducer\";\nimport boardsReducer from \"./boardsReducer\";\nimport boardOrderReducer from \"./boardOrderReducer\";\nimport activeBoardReducer from \"./activeBoardReducer\";\n\nexport default combineReducers({\n  lists: listsReducer,\n  cards: cardsReducer,\n  boards: boardsReducer,\n  boardOrder: boardOrderReducer,\n  activeBoard: activeBoardReducer\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport thunk from \"redux-thunk\";\n\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n  let store = createStore(persistedReducer, applyMiddleware(thunk));\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Textarea from \"react-textarea-autosize\";\nimport Card from \"@material-ui/core/Card\";\n\nconst Container = styled.div`\n  width: 284px;\n  margin-bottom: 8px;\n`;\n\nconst StyledCard = styled(Card)`\n  min-height: 85px;\n  padding: 6px 8px 2px;\n`;\n\nconst StyledTextArea = styled(Textarea)`\n  resize: none;\n  width: 100%;\n  overflow: hidden;\n  outline: none;\n  border: none;\n`;\n\nconst ButtonContainer = styled.div`\n  margin-top: 8px;\n  display: flex;\n  align-items: center;\n  margin-left: 8px;\n`;\n\nconst StyledIcon = styled(Icon)`\n  margin-left: 8px;\n  cursor: pointer;\n`;\n\nconst TrelloForm = React.memo(\n  ({ list, text = \"\", onChange, closeForm, children }) => {\n    const placeholder = list\n      ? \"Enter list title...\"\n      : \"Enter a title for this card...\";\n\n    return (\n      <Container>\n        <StyledCard>\n          <StyledTextArea\n            placeholder={placeholder}\n            autoFocus\n            value={text}\n            onChange={e => onChange(e)}\n            onBlur={closeForm}\n          />\n        </StyledCard>\n        <ButtonContainer>\n          {children}\n          <StyledIcon onMouseDown={closeForm}>close</StyledIcon>\n        </ButtonContainer>\n      </Container>\n    );\n  }\n);\n\nexport default TrelloForm;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\n\nconst StyledButton = styled(Button)`\n  && {\n    color: white;\n    background: #5aac44;\n  }\n`;\n\nconst TrelloButton = ({ children, onClick }) => {\n  return (\n    <StyledButton variant=\"contained\" onMouseDown={onClick}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default TrelloButton;\n","import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport Icon from \"@material-ui/core/Icon\";\nimport TrelloForm from \"./TrelloForm\";\nimport { editCard, deleteCard } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport TrelloButton from \"./TrelloButton\";\n\nconst CardContainer = styled.div`\n  margin: 0 0 8px 0;\n  position: relative;\n  max-width: 100%;\n  word-wrap: break-word;\n`;\n\nconst EditButton = styled(Icon)`\n  position: absolute;\n  display: none;\n  right: 5px;\n  top: 5px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst DeleteButton = styled(Icon)`\n  position: absolute;\n  display: none;\n  right: 5px;\n  bottom: 5px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst TrelloCard = React.memo(({ text, id, listID, index, dispatch }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [cardText, setText] = useState(text);\n\n  const closeForm = e => {\n    setIsEditing(false);\n  };\n\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n\n  const saveCard = e => {\n    e.preventDefault();\n\n    dispatch(editCard(id, listID, cardText));\n    setIsEditing(false);\n  };\n\n  const handleDeleteCard = e => {\n    console.log(listID);\n    dispatch(deleteCard(id, listID));\n  };\n\n  const renderEditForm = () => {\n    return (\n      <TrelloForm text={cardText} onChange={handleChange} closeForm={closeForm}>\n        <TrelloButton onClick={saveCard}>Save</TrelloButton>\n      </TrelloForm>\n    );\n  };\n\n  const renderCard = () => {\n    return (\n      <Draggable draggableId={String(id)} index={index}>\n        {provided => (\n          <CardContainer\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            onDoubleClick={() => setIsEditing(true)}\n          >\n            <Card>\n              <EditButton\n                onMouseDown={() => setIsEditing(true)}\n                fontSize=\"small\"\n              >\n                edit\n              </EditButton>\n              <DeleteButton fontSize=\"small\" onMouseDown={handleDeleteCard}>\n                delete\n              </DeleteButton>\n\n              <CardContent>\n                <Typography>{text}</Typography>\n              </CardContent>\n            </Card>\n          </CardContainer>\n        )}\n      </Draggable>\n    );\n  };\n\n  return isEditing ? renderEditForm() : renderCard();\n});\n\nexport default connect()(TrelloCard);\n","import React from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport styled from \"styled-components\";\n\nconst TrelloOpenForm = ({ list, children, onClick }) => {\n  const buttonTextOpacity = list ? 1 : 0.5;\n  const buttonTextColor = list ? \"white\" : \"inherit\";\n  const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\n\n  const OpenFormButton = styled.div`\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    border-radius: 3px;\n    height: 36px;\n    margin-left: 8px;\n    width: 300px;\n    padding-left: 10px;\n    padding-right: 10px;\n    opacity: ${buttonTextOpacity};\n    color: ${buttonTextColor};\n    background-color: ${buttonTextBackground};\n  `;\n\n  return (\n    <OpenFormButton onClick={onClick}>\n      <Icon>add</Icon>\n      <p style={{ flexShrink: 0 }}>{children}</p>\n    </OpenFormButton>\n  );\n};\n\nexport default TrelloOpenForm;\n","import React from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport TrelloButton from \"./TrelloButton\";\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\nimport styled from \"styled-components\";\nimport TrelloForm from \"./TrelloForm\";\nimport TrelloOpenForm from \"./TrelloOpenForm\";\n\nclass TrelloCreate extends React.PureComponent {\n  state = {\n    formOpen: false,\n    text: \"\"\n  };\n\n  openForm = () => {\n    this.setState({\n      formOpen: true\n    });\n  };\n\n  closeForm = e => {\n    this.setState({\n      formOpen: false\n    });\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      text: e.target.value\n    });\n  };\n\n  handleAddList = () => {\n    const { dispatch } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      this.setState({\n        text: \"\"\n      });\n      dispatch(addList(text));\n    }\n\n    return;\n  };\n\n  handleAddCard = () => {\n    const { dispatch, listID } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      this.setState({\n        text: \"\"\n      });\n      dispatch(addCard(listID, text));\n    }\n  };\n\n  renderOpenForm = () => {\n    const { list } = this.props;\n\n    const buttonText = list ? \"Add another list\" : \"Add another card\";\n    const buttonTextOpacity = list ? 1 : 0.5;\n    const buttonTextColor = list ? \"white\" : \"inherit\";\n    const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\n\n    const OpenFormButton = styled.div`\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      border-radius: 3px;\n      height: 36px;\n      margin-left: 8px;\n      width: 300px;\n      padding-left: 10px;\n      padding-right: 10px;\n      opacity: ${buttonTextOpacity};\n      color: ${buttonTextColor};\n      background-color: ${buttonTextBackground};\n    `;\n\n    return (\n      <OpenFormButton onClick={this.openForm}>\n        <Icon>add</Icon>\n        <p style={{ flexShrink: 0 }}>{buttonText}</p>\n      </OpenFormButton>\n    );\n  };\n\n  render() {\n    const { text } = this.state;\n    const { list } = this.props;\n    return this.state.formOpen ? (\n      <TrelloForm\n        text={text}\n        onChange={this.handleInputChange}\n        closeForm={this.closeForm}\n      >\n        <TrelloButton onClick={list ? this.handleAddList : this.handleAddCard}>\n          {list ? \"Add List\" : \"Add Card\"}\n        </TrelloButton>\n      </TrelloForm>\n    ) : (\n      <TrelloOpenForm list={list} onClick={this.openForm}>\n        {list ? \"Add another list\" : \"Add another card\"}\n      </TrelloOpenForm>\n    );\n  }\n}\n\nexport default connect()(TrelloCreate);\n","import React, { useState } from \"react\";\nimport TrelloCard from \"./TrelloCard\";\nimport TrelloCreate from \"./TrelloCreate\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { editTitle, deleteList } from \"../actions\";\nimport Icon from \"@material-ui/core/Icon\";\n\nconst ListContainer = styled.div`\n  background-color: #dfe3e6;\n  border-radius: 3px;\n  width: 300px;\n  padding: 8px;\n  height: 100%;\n  margin: 0 8px 0 0;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  border: none;\n  outline-color: blue;\n  border-radius: 3px;\n  margin-bottom: 3px;\n  padding: 5px;\n`;\n\nconst TitleContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst DeleteButton = styled(Icon)`\n  cursor: pointer;\n  transition: opacity 0.3s ease-in-out;\n  opacity: 0.4;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst ListTitle = styled.h4`\n  transition: background 0.3s ease-in;\n  ${TitleContainer}:hover & {\n    background: #ccc;\n  }\n`;\n\nconst TrelloList = ({ title, cards, listID, index, dispatch }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [listTitle, setListTitle] = useState(title);\n\n  const renderEditInput = () => {\n    return (\n      <form onSubmit={handleFinishEditing}>\n        <StyledInput\n          type=\"text\"\n          value={listTitle}\n          onChange={handleChange}\n          autoFocus\n          onFocus={handleFocus}\n          onBlur={handleFinishEditing}\n        />\n      </form>\n    );\n  };\n\n  const handleFocus = e => {\n    e.target.select();\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    setListTitle(e.target.value);\n  };\n\n  const handleFinishEditing = e => {\n    setIsEditing(false);\n    dispatch(editTitle(listID, listTitle));\n  };\n\n  const handleDeleteList = () => {\n    dispatch(deleteList(listID));\n  };\n\n  return (\n    <Draggable draggableId={String(listID)} index={index}>\n      {provided => (\n        <ListContainer\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n        >\n          <Droppable droppableId={String(listID)} type=\"card\">\n            {provided => (\n              <div>\n                <div>\n                  {isEditing ? (\n                    renderEditInput()\n                  ) : (\n                    <TitleContainer onClick={() => setIsEditing(true)}>\n                      <ListTitle>{listTitle}</ListTitle>\n                      <DeleteButton onClick={handleDeleteList}>\n                        delete\n                      </DeleteButton>\n                    </TitleContainer>\n                  )}\n                </div>\n                <div {...provided.droppableProps} ref={provided.innerRef}>\n                  {cards.map((card, index) => (\n                    <TrelloCard\n                      key={card.id}\n                      text={card.text}\n                      id={card.id}\n                      index={index}\n                      listID={listID}\n                    />\n                  ))}\n                  {provided.placeholder}\n                  <TrelloCreate listID={listID} />\n                </div>\n              </div>\n            )}\n          </Droppable>\n        </ListContainer>\n      )}\n    </Draggable>\n  );\n};\n\nexport default connect()(TrelloList);\n","import React, { PureComponent } from \"react\";\nimport TrelloList from \"./TrelloList\";\nimport { connect } from \"react-redux\";\nimport TrelloCreate from \"./TrelloCreate\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { sort, setActiveBoard } from \"../actions\";\nimport { Link } from \"react-router-dom\";\n\nconst ListsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst H2 = styled.h2`\n  color: white;\n  font-family: Roboto, sans-serif;\n`;\n\n// TODO: Fix performan\n\nclass TrelloBoard extends PureComponent {\n  componentDidMount() {\n    // set active trell\n    const { boardID } = this.props.match.params;\n\n    this.props.dispatch(setActiveBoard(boardID));\n  }\n\n  onDragEnd = (result) => {\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    this.props.dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId,\n        type\n      )\n    );\n  };\n\n  render() {\n    const { lists, cards, match, boards } = this.props;\n    const { boardID } = match.params;\n    const board = boards[boardID];\n    if (!board) {\n      return <p>Board not found</p>;\n    }\n    const listOrder = board.lists;\n\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Link to=\"/\">Go Back</Link>\n        <H2>{board.title}</H2>\n        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\n          {(provided) => (\n            <ListsContainer\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {listOrder.map((listID, index) => {\n                const list = lists[listID];\n                if (list) {\n                  const listCards = list.cards.map((cardID) => cards[cardID]);\n\n                  return (\n                    <TrelloList\n                      listID={list.id}\n                      key={list.id}\n                      title={list.title}\n                      cards={listCards}\n                      index={index}\n                    />\n                  );\n                }\n              })}\n              {provided.placeholder}\n              <TrelloCreate list />\n            </ListsContainer>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  lists: state.lists,\n  cards: state.cards,\n  boards: state.boards,\n});\n\nexport default connect(mapStateToProps)(TrelloBoard);\n","import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const setActiveBoard = id => {\n  return {\n    type: CONSTANTS.SET_ACTIVE_BOARD,\n    payload: id\n  };\n};\n\nexport const addBoard = title => {\n  const id = uuid();\n  return {\n    type: CONSTANTS.ADD_BOARD,\n    payload: { title, id }\n  };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Thumbnail = styled.div`\n  height: 280px;\n  width: 280px;\n  background: #27496d;\n  padding: 10px;\n  margin: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 3px;\n  box-shadow: 0 2px 4px grey;\n  border-radius: 15px;\n`;\n\nconst Title = styled.h1`\n  color: #dae1e7;\n  text-decoration: none;\n  text-transform: capitalize;\n`;\n\nconst BoardThumbnail = ({ title }) => {\n  console.log(title);\n  return (\n    <Thumbnail>\n      <Title>{title}</Title>\n    </Thumbnail>\n  );\n};\n\nexport default BoardThumbnail;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addBoard } from \"../actions\";\nimport BoardThumbnail from \"./BoardThumbnail\";\n\nconst Thumbnails = styled.div`\n  flex: 1;\n  height: 50%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst HomeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-sizing: border-box;\n`;\n\nconst CreateTitle = styled.h3`\n  font-size: 48px;\n  color: white;\n  font-weight: bold;\n  font-family: Arial, Helvetica, sans-serif;\n`;\n\nconst CreateInput = styled.input`\n  width: 400px;\n  height: 80px;\n  font-size: 22px;\n  padding: 10px;\n  box-sizing: border-box;\n  border-radius: 3px;\n  border: none;\n  outline-color: blue;\n  box-shadow: 0 2px 4px grey;\n  align-self: center;\n`;\n\nconst Home = ({ boards, boardOrder, dispatch }) => {\n  // this is the home site that shows you your boards and you can also create a Board here.\n\n  const [newBoardTitle, setNewBoardTitle] = useState(\"\");\n\n  const handleChange = e => {\n    setNewBoardTitle(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addBoard(newBoardTitle));\n  };\n\n  const renderBoards = () => {\n    return boardOrder.map(boardID => {\n      const board = boards[boardID];\n\n      return (\n        <Link\n          key={boardID}\n          to={`/${board.id}`}\n          style={{ textDecoration: \"none\" }}\n        >\n          <BoardThumbnail {...board} />\n        </Link>\n      );\n    });\n  };\n\n  const renderCreateBoard = () => {\n    return (\n      <form onSubmit={handleSubmit} style={{ textAlign: \"center\" }}>\n        <CreateTitle>Create a new Board</CreateTitle>\n        <CreateInput\n          onChange={handleChange}\n          value={newBoardTitle}\n          placeholder=\"Your boards title...\"\n          type=\"text\"\n        />\n      </form>\n    );\n  };\n\n  return (\n    <HomeContainer>\n      <Thumbnails>{renderBoards()}</Thumbnails>\n      {renderCreateBoard()}\n    </HomeContainer>\n  );\n};\n\nconst mapStateToProps = state => ({\n  boards: state.boards,\n  boardOrder: state.boardOrder\n});\n\nexport default connect(mapStateToProps)(Home);\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport TrelloBoard from \"../components/TrelloBoard\";\nimport Home from \"../components/Home\";\n\nconst AppRouter = () => {\n  return (\n    <Router>\n      <div>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/:boardID\" component={TrelloBoard} />\n      </div>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { PureComponent } from \"react\";\nimport Routes from \"../routes\";\n\nclass App extends PureComponent {\n  render() {\n    return <Routes />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./store\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\nimport { createGlobalStyle } from \"styled-components\";\nimport $ from \"jquery\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst { persistor, store } = Store();\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    background-color: #142850;\n    box-sizing: border-box;\n    transition: all 0.5s ease-in;\n  }\n`;\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <GlobalStyle />\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n$(document).bind(\"DOMNodeRemoved\", function (e) {\n  console.log(\"Removed: \" + e.target.nodeName);\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}